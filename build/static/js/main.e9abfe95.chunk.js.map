{"version":3,"sources":["components/Filter.js","services/persons.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","PersonForm","persons","setPersons","setMessage","setColor","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","some","person","name","p","changedPerson","number","window","confirm","returnedPerson","map","setTimeout","catch","error","personObject","concat","target","type","Persons","onClick","current","handleDelete","Notification","message","color","style","className","App","setFilter","useEffect","initialPersons","filteredPersons","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9abfe95.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = ({ filter, handleFilterChange }) => {\n    return (\n        <div>\n            filter shown with <input\n                value={filter}\n                onChange={handleFilterChange}\n            />\n        </div>\n    )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    axios.delete(`${baseUrl}/${id}`)\n}\n\nconst personService = {getAll, create, update, remove}\n\nexport default personService","import React, { useState } from 'react'\nimport personService from '../services/persons'\n\n\nconst PersonForm = ({ persons, setPersons, setMessage, setColor }) => {\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        if (persons.some(person => person.name === newName)) {\n            const person = persons.filter(p => p.name === newName)[0]\n            const id = person.id\n            const changedPerson = { ...person, number: newNumber }\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                personService\n                    .update(id, changedPerson)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(p => p.id !== returnedPerson.id ? p : returnedPerson))\n                        setMessage(`Updated ${newName}`)\n                        setColor('green')\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 3000)\n                    }\n                    )\n                    .catch(error => {\n                        setPersons(persons.filter(p => p.id !== id))\n                        setMessage(`Information of ${newName} has already been removed from server`)\n                        setColor('red')\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 3000)\n                    })\n            }\n        } else {\n            const personObject = {\n                name: newName,\n                number: newNumber\n            }\n\n            personService\n                .create(personObject)\n                .then(\n                    returnedPerson =>\n                        setPersons(persons.concat(returnedPerson))\n                )\n            setMessage(\n                `Added ${newName}`\n            )\n            setColor('green')\n            setTimeout(() => {\n                setMessage(null)\n            }, 3000)\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input\n                    value={newName}\n                    onChange={handleNameChange}\n                />\n            </div>\n            <div>\n                number: <input\n                    value={newNumber}\n                    onChange={handleNumberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\nimport personService from '../services/persons'\n\n\nconst Persons = ({ persons, setPersons }) => {\n  const handleDelete = person => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .remove(person.id)\n      setPersons(persons.filter(current => current.id !== person.id))\n    }\n  }\n  return (\n    <div>\n      {persons.map(person =>\n        <div key={person.id}>\n          {person.name} {person.number}\n          <button onClick={() => handleDelete(person)}>delete</button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message, color }) => {\n    if (message === null) {\n      return null\n    }\n\n    const style = {color}\n  \n    return (\n      <div className=\"message\" style={style}>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [color, setColor] = useState('white')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(\n        initialPersons => setPersons(initialPersons)\n      )\n  }, [])\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} color={color} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm persons={persons} setPersons={setPersons} setMessage={setMessage} setColor={setColor} />\n      <h3>Numbers</h3>\n      <Persons persons={filteredPersons} setPersons={setPersons} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}